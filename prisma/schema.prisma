generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                String           @id @default(auto()) @map("_id") @db.ObjectId
  firstName         String
  lastName          String
  email             String           @unique
  username          String           @unique
  createdAt         DateTime         @default(now())
  eventsAttended    Transaction[]
  eventsSponsored   Sponsorship[]
  eventsOrganized   Event[]          @relation("OrganizedEvents")
  paymentAccountId  String?
  paymentSetup      Boolean          @default(false)
}

model Event {
  id                String             @id @default(auto()) @map("_id") @db.ObjectId
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  title             String
  summary           String
  description       String
  locationLink      String?
  startTime         DateTime
  durationMinutes   Int
  venue             String
  images            String[]
  organizer         User               @relation("OrganizedEvents", fields: [organizerId], references: [id])
  organizerId       String             @db.ObjectId
  ticketTypes       TicketType[]
  sponsorshipTypes  SponsorshipType[]
  transactions      Transaction[]
  sponsorships      Sponsorship[]
}

model TicketType {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  price         Float
  currency      String
  quantity      Int
  event         Event         @relation(fields: [eventId], references: [id])
  eventId       String        @db.ObjectId
  transactions  Transaction[]
}

model SponsorshipType {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  benefits      String[]
  price         Float
  currency      String
  event         Event          @relation(fields: [eventId], references: [id])
  eventId       String         @db.ObjectId
  sponsorships  Sponsorship[]
}

model Sponsorship {
  id                 String           @id @default(auto()) @map("_id") @db.ObjectId
  user               User             @relation(fields: [userId], references: [id])
  userId             String           @db.ObjectId
  event              Event            @relation(fields: [eventId], references: [id])
  eventId            String           @db.ObjectId
  sponsorshipType    SponsorshipType @relation(fields: [sponsorshipTypeId], references: [id])
  sponsorshipTypeId  String           @db.ObjectId
  status             String
  createdAt          DateTime         @default(now())
}

model Transaction {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  event         Event        @relation(fields: [eventId], references: [id])
  eventId       String       @db.ObjectId
  user          User         @relation(fields: [userId], references: [id])
  userId        String       @db.ObjectId
  ticketType    TicketType   @relation(fields: [ticketTypeId], references: [id])
  ticketTypeId  String       @db.ObjectId
  quantity      Int
  fees          Float
  currency      String
  status        String
  razorpayId    String
  createdAt     DateTime      @default(now())
}
